cc_ts_test <- ts(cc_ts[247:270],start = c(2021, 7), frequency = 12)
mod_inter <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xtransf=data.frame(covid=1*(seq(cc_ts_train)==232), covid=1*(seq(cc_ts_train)==232)),
transfer = list(c(0,0), c(1,0)),
method = 'ML'
)
mod_inter
# Fitted model estimates that the covid lockdowns reduced overall crime by {1 - exp(w0- w1)} * 100 percent in April 2020, and crime k months later was lowered by {1 - exp(w1 * w2^k)}
w0 <- as.numeric(mod_inter$coef["covid-MA0"])
w1 <- as.numeric(mod_inter$coef["covid.1-MA0"])
w2 <- as.numeric(mod_inter$coef["covid.1-AR1"])
covid = 1*(seq(cc_ts_train)==232)
plot(ts(covid * (w0) + filter(covid, filter = w2, method = 'recursive', side =1) *
(w1), frequency = 12, start = 2001), ylab = 'Covid-19 Effects', type = 'h')
abline(h=0)
cc_ts_train <-ts(cc_ts[1:246],start = c(min(df$year), min(df$month)), frequency = 12)
cc_ts_test <- ts(cc_ts[247:270],start = c(2021, 7), frequency = 12)
mod_inter <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xtransf=data.frame(covid=1*(seq(cc_ts_train)==232), covid=1*(seq(cc_ts_train)==232)),
transfer = list(c(0,0), c(1,0)),
method = 'ML'
)
mod_inter
# Fitted model estimates that the covid lockdowns reduced overall crime by {1 - exp(w0- w1)} * 100 percent in April 2020, and crime k months later was lowered by {1 - exp(w1 * w2^k)}
w0 <- as.numeric(mod_inter$coef["covid-MA0"])
w1 <- as.numeric(mod_inter$coef["covid.1-MA0"])
w2 <- as.numeric(mod_inter$coef["covid.1-AR1"])
covid = 1*(seq(cc_ts_train)==232)
plot(ts(covid * (w0) + filter(covid, filter = w2, method = 'recursive', side =1) *
(w1), frequency = 12, start = 2001), ylab = 'Covid-19 Effects', type = 'h')
abline(h=0)
covid_lockdown <- rep(0, length(cc_ts_train))
covid_lockdown[232:235] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
method = 'ML',
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
covid_lockdown <- rep(0, length(cc_ts_train))
covid_lockdown[232:236] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
method = 'ML',
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
covid_lockdown <- rep(0, length(cc_ts_train))
covid_lockdown[232:232] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
method = 'ML',
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
covid_lockdown <- rep(0, length(cc_ts_train))
covid_lockdown[232:238] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
method = 'ML',
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
covid_lockdown <- rep(0, length(cc_ts_train))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
method = 'ML',
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
forcast(mod_inter_shift, h=12, xreg=[0,0,0])
forcast(mod_inter_shift, h=12, xreg=c(0,0,0))
forecast(mod_inter_shift, h=12, xreg=c(0,0,0))
forecast(mod_inter_shift, h=12, newxreg=c(0,0,0))
forecast(mod_inter_shift, h=3, newxreg=c(0,0,0))
forecast(mod_inter_shift, h=3, xreg=list(c(0,0,0)))
covid_lockdown <- rep(0, length(cc_ts_train))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arima(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
forecast(mod_inter_shift, h=3, newxreg=list(c(0,0,0)))
forecast(mod_inter_shift, h=3, xreg=(c(1,0,0)))
forecast(mod_inter_shift, h=3, xreg=(c(1,0,0)))
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
forecast(mod_inter_shift, h=3, xreg=(c(1,0,0)))
checkresiduals(mod_inter_shift)
forecast(mod_inter_shift, h=3, xreg=(c(1,0,0)))
forecast(mod_inter_shift, h=3, newxreg=(c(1,0,0)))
covid_lockdown
forecast(mod_inter_shift, h=3, newxreg=c(1,0,0))
forecast(mod_inter_shift, h=3, newxreg=c(1,0,1))
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
forecast(mod_inter_shift, h=3, xreg=c(1,0,1))
forecast(mod_inter_shift, h=3, xreg=1:3)
forecast(mod_inter_shift, h=3, xreg=1:3)
forecast(mod_inter_shift, h=3, xreg=1:3)
forecast(mod_inter_shift, h=3, xreg=1:3)
forecast(mod_inter_shift, h=3, xreg=1:3)
predict(mod_inter_shift, h=3, xreg=1:3)
predict(mod_inter_shift, h=3)
forecast(mod_inter_shift, h=3, xreg = covid_lockdown)
library(forecast)
library(ggplot2)
# Monthly time series: 2001-01 -> 2023-06
df <- read.csv(file = "../data/cc_monthly_final.csv")
head(df)
# load as timeseries object
cc_ts <- ts(df$monthly_crimes, start = c(min(df$year), min(df$month)), frequency = 12)
print(cc_ts)
autoplot(cc_ts) + geom_vline(xintercept = 2020.3, linetype = "dashed", color = "blue")
cc_ts_diff <- diff(cc_ts, lag = 12)
autoplot(cc_ts_diff)
# data ranges from Jan 2001 up to and including March 2020
cc_ts_pre_covid <- ts(cc_ts[1:231],start = c(min(df$year), min(df$month)), frequency = 12)
autoplot(cc_ts_pre_covid)
# auto arima
mod_pre_covid <- auto.arima(cc_ts_pre_covid, seasonal=TRUE, stepwise=FALSE)
summary(mod_pre_covid)
# checking residuals
checkresiduals(mod_pre_covid)
cc_ts_train <-ts(cc_ts[1:246],start = c(min(df$year), min(df$month)), frequency = 12)
cc_ts_test <- ts(cc_ts[247:270],start = c(2021, 7), frequency = 12)
mod_inter <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xtransf=data.frame(covid=1*(seq(cc_ts_train)==232), covid=1*(seq(cc_ts_train)==232)),
transfer = list(c(0,0), c(1,0)),
method = 'ML'
)
mod_inter
# Fitted model estimates that the covid lockdowns reduced overall crime by {1 - exp(w0- w1)} * 100 percent in April 2020, and crime k months later was lowered by {1 - exp(w1 * w2^k)}
w0 <- as.numeric(mod_inter$coef["covid-MA0"])
w1 <- as.numeric(mod_inter$coef["covid.1-MA0"])
w2 <- as.numeric(mod_inter$coef["covid.1-AR1"])
covid = 1*(seq(cc_ts_train)==232)
plot(ts(covid * (w0) + filter(covid, filter = w2, method = 'recursive', side =1) *
(w1), frequency = 12, start = 2001), ylab = 'Covid-19 Effects', type = 'h')
abline(h=0)
checkresiduals(mod_inter)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
forecast(mod_inter_shift, h=3, xreg = covid_lockdown)
forecast(mod_inter_shift, h=3)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arimax(cc_ts_train,
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
forecast(mod_inter_shift, h=3, xreg = )
forecast(mod_inter_shift, h=3, xreg = c(1,1,1))
fitted(mod_inter_shift)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arima(cc_ts_train,
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
fitted(mod_inter_shift)
fitted(mod_inter_shift, h=12)
forecast(mod_inter_shift, h=12)
forecast(mod_inter_shift, h=12, xreg=c(rep(0,12)))
forecast(mod_inter_shift, h=12, xreg=c(rep(0,12)))
forecast(mod_inter_shift, h=12, xreg=c(rep(1,12)))
mod_inter_shift
predict(mod_inter_shift, n.ahead = 5, newxreg = c(1,0,1,1,1))
predict(mod_inter_shift, n.ahead = 5, newxreg = c(0,0,0,0,0))
library(forecast)
library(ggplot2)
# Monthly time series: 2001-01 -> 2023-06
df <- read.csv(file = "../data/cc_monthly_final.csv")
head(df)
# load as timeseries object
cc_ts <- ts(df$monthly_crimes, start = c(min(df$year), min(df$month)), frequency = 12)
print(cc_ts)
autoplot(cc_ts) + geom_vline(xintercept = 2020.3, linetype = "dashed", color = "blue")
cc_ts_diff <- diff(cc_ts, lag = 12)
autoplot(cc_ts_diff)
# data ranges from Jan 2001 up to and including March 2020
cc_ts_pre_covid <- ts(cc_ts[1:231],start = c(min(df$year), min(df$month)), frequency = 12)
autoplot(cc_ts_pre_covid)
# auto arima
mod_pre_covid <- auto.arima(cc_ts_pre_covid, seasonal=TRUE, stepwise=FALSE)
summary(mod_pre_covid)
# checking residuals
checkresiduals(mod_pre_covid)
cc_ts_train <-ts(cc_ts[1:246],start = c(min(df$year), min(df$month)), frequency = 12)
cc_ts_test <- ts(cc_ts[247:270],start = c(2021, 7), frequency = 12)
mod_inter <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xtransf=data.frame(covid=1*(seq(cc_ts_train)==232), covid=1*(seq(cc_ts_train)==232)),
transfer = list(c(0,0), c(1,0)),
method = 'ML'
)
mod_inter
# Fitted model estimates that the covid lockdowns reduced overall crime by {1 - exp(w0- w1)} * 100 percent in April 2020, and crime k months later was lowered by {1 - exp(w1 * w2^k)}
w0 <- as.numeric(mod_inter$coef["covid-MA0"])
w1 <- as.numeric(mod_inter$coef["covid.1-MA0"])
w2 <- as.numeric(mod_inter$coef["covid.1-AR1"])
covid = 1*(seq(cc_ts_train)==232)
plot(ts(covid * (w0) + filter(covid, filter = w2, method = 'recursive', side =1) *
(w1), frequency = 12, start = 2001), ylab = 'Covid-19 Effects', type = 'h')
abline(h=0)
checkresiduals(mod_inter)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arima(cc_ts_train,
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
mod_inter_shift
checkresiduals(mod_inter_shift)
predict(mod_inter_shift, n.ahead = 5, newxreg = c(0,0,0,0,0))
arr <- c(rep(0, length(cc_ts_test)))
predict(mod_inter_shift, n.ahead = 24, newxreg = arr)
# checking residuals
checkresiduals(mod_pre_covid)
title(main = "Residuals Diagnostic Plot")
# checking residuals
checkresiduals(mod_pre_covid, title = "test")
# checking residuals
checkresiduals(mod_pre_covid, title = "test")
# checking residuals
checkresiduals(mod_pre_covid)
autoplot(cc_ts_pre_covid, title = "tst")
autoplot(cc_ts_pre_covid)
autoplot(cc_ts_pre_covid)
autoplot(cc_ts_diff, ylab="Seasonal Differencing")
mod_inter <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xtransf=data.frame(covid=1*(seq(cc_ts_train)==232), covid=1*(seq(cc_ts_train)==232)),
transfer = list(c(0,0), c(1,0)),
method = 'ML'
)
mod_inter
{1 - exp(-6.3539- 6.0347)} * 100
(1 - exp(-6.3539- 6.0347))
exp(-6.3539- 6.0347))
exp(-6.3539- 6.0347)
*100
exp(-6.3539- 6.0347)*100
{1 - exp(-6.3539- 6.0347)} * 100
{1 − exp(−0.0949−0.2715)}
{1 - exp(-0.0949-0.2715)}
{1 - exp(-0.2715*.8139^1)}
{1 - exp(-0.2715*.8139^2)}
{1 - exp(-6.0347*-.0147^2)}
{1 - exp(-6.0347*-.0147^1)}
{1 - exp(-6.0347*-.0147^1)}*100
{1 - exp(-6.0347*)}*100
{1 - exp(-6.0347)}*100
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
library(fpp2)
library(forecast)
crime <- read.csv('../data/crime.csv')
crime <- read.csv('../data/cc_monthly_final.csv')
crime <- crime$monthly_crimes
crime <- ts(crime, start = c(2001,1), frequency = 12)
plot(crime)
crime_detrend <- diff(crime)
periodogram(crime_detrend, ylab = 'Variable Crime (Detrended) Periodogram')
temp <- periodogram(crime_detrend, ylab = 'Variable Crime Periodogram')
top_indices <- order(temp$spec, decreasing = TRUE)[1:5]
top_frequencies <- temp$freq[top_indices]
top_magnitudes <- temp$spec[top_indices]
seasonality <- 1 / top_frequencies
# Create a data frame with the top 5 frequencies, magnitudes, and seasonality
top_5_data <- round(data.frame(Frequency = top_frequencies, Magnitude = top_magnitudes, Seasonality = seasonality),2)
top_5_data
train <- ts(crime[1:246], start = c(2001,1), frequency = 12)
test <- ts(crime[247:270], start = c(2021,7), frequency = 12)
fit <- auto.arima(train, xreg = fourier(train, 5), seasonal = FALSE)
fc <- forecast(fit, xreg =  fourier(train, 5, 24))
autoplot(fc, series="ARIMA(3,1,1)") +
autolayer(test)+
ggtitle("Forecasts from Regression with ARIMA(3,1,1) Errors") +
xlab("Year") + ylab("Crime")
fc <- forecast(mod_inter_shift, xreg =  fourier(train, 5, 24))
autoplot(cc_ts_train, series="ARIMA(3,1,1)") +
autolayer(test)+
ggtitle("Forecasts from Regression with ARIMA(3,1,1) Errors") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="ARIMA(3,1,1)") +
autolayer(test)+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
preds
arr <- c(rep(0, length(cc_ts_test)))
preds <- predict(mod_inter_shift, n.ahead = 24, newxreg = arr)
preds
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(preds)
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
arr <- c(rep(1, length(cc_ts_test)))
preds <- predict(mod_inter_shift, n.ahead = 24, newxreg = arr)
preds
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
arr <- c(rep(0, length(cc_ts_test)))
preds <- predict(mod_inter_shift, n.ahead = 24, newxreg = arr)
preds
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
accuracy(preds)
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
library(fpp2)
library(forecast)
crime <- read.csv('../data/cc_monthly_final.csv')
crime <- crime$monthly_crimes
crime <- ts(crime, start = c(2001,1), frequency = 12)
plot(crime)
crime_detrend <- diff(crime)
periodogram(crime_detrend, ylab = 'Variable Crime (Detrended) Periodogram')
temp <- periodogram(crime_detrend, ylab = 'Variable Crime Periodogram')
top_indices <- order(temp$spec, decreasing = TRUE)[1:5]
top_frequencies <- temp$freq[top_indices]
top_magnitudes <- temp$spec[top_indices]
seasonality <- 1 / top_frequencies
# Create a data frame with the top 5 frequencies, magnitudes, and seasonality
top_5_data <- round(data.frame(Frequency = top_frequencies, Magnitude = top_magnitudes, Seasonality = seasonality),2)
top_5_data
train <- ts(crime[1:246], start = c(2001,1), frequency = 12)
test <- ts(crime[247:270], start = c(2021,7), frequency = 12)
fit <- auto.arima(train, xreg = fourier(train, 5), seasonal = FALSE)
fc <- forecast(fit, xreg =  fourier(train, 5, 24))
autoplot(fc, series="ARIMA(3,1,1)") +
autolayer(test)+
ggtitle("Forecasts from Regression with ARIMA(3,1,1) Errors") +
xlab("Year") + ylab("Crime")
summary(fit)
accuracy(fc$mean, test)
snai <- snaive(train, h=24)
autoplot(snai, series="Seasonal Naive Forecast") +
autolayer(test)+
autolayer(fc$mean)+
ggtitle("Forecasts with Seasonal Naive Method") +
xlab("Year") + ylab("Crime")
accuracy(snai$mean, test)
accuracy(preds$pred, test)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- arima(cc_ts_train,
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
summary(mod_inter_shift)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- Arima(cc_ts_train,
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
summary(mod_inter_shift)
library(forecast)
library(ggplot2)
# Monthly time series: 2001-01 -> 2023-06
df <- read.csv(file = "../data/cc_monthly_final.csv")
head(df)
# load as timeseries object
cc_ts <- ts(df$monthly_crimes, start = c(min(df$year), min(df$month)), frequency = 12)
print(cc_ts)
autoplot(cc_ts) + geom_vline(xintercept = 2020.3, linetype = "dashed", color = "blue")
cc_ts_diff <- diff(cc_ts, lag = 12)
autoplot(cc_ts_diff, ylab="Seasonal Differencing")
# data ranges from Jan 2001 up to and including March 2020
cc_ts_pre_covid <- ts(cc_ts[1:231],start = c(min(df$year), min(df$month)), frequency = 12)
autoplot(cc_ts_pre_covid)
# auto arima
mod_pre_covid <- auto.arima(cc_ts_pre_covid, seasonal=TRUE, stepwise=FALSE)
summary(mod_pre_covid)
# checking residuals
checkresiduals(mod_pre_covid)
cc_ts_train <-ts(cc_ts[1:246],start = c(min(df$year), min(df$month)), frequency = 12)
cc_ts_test <- ts(cc_ts[247:270],start = c(2021, 7), frequency = 12)
mod_inter <- arimax(log(cc_ts_train),
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xtransf=data.frame(covid=1*(seq(cc_ts_train)==232), covid=1*(seq(cc_ts_train)==232)),
transfer = list(c(0,0), c(1,0)),
method = 'ML'
)
mod_inter
# Fitted model estimates that the covid lockdowns reduced overall crime by {1 - exp(w0- w1)} * 100 percent in April 2020, and crime k months later was lowered by {1 - exp(w1 * w2^k)}
w0 <- as.numeric(mod_inter$coef["covid-MA0"])
w1 <- as.numeric(mod_inter$coef["covid.1-MA0"])
w2 <- as.numeric(mod_inter$coef["covid.1-AR1"])
covid = 1*(seq(cc_ts_train)==232)
plot(ts(covid * (w0) + filter(covid, filter = w2, method = 'recursive', side =1) *
(w1), frequency = 12, start = 2001), ylab = 'Covid-19 Effects', type = 'h')
abline(h=0)
checkresiduals(mod_inter)
covid_lockdown <- c(rep(0, length(cc_ts_train)))
covid_lockdown[232:237] <- 1
mod_inter_shift <- Arima(cc_ts_train,
order=c(0,1,2),
seasonal = list(order=c(1,1,2), period=12),
xreg = covid_lockdown
)
summary(mod_inter_shift)
checkresiduals(mod_inter_shift)
arr <- c(rep(0, length(cc_ts_test)))
preds <- predict(mod_inter_shift, n.ahead = 24, newxreg = arr)
preds
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
accuracy(preds$pred, test)
autoplot(cc_ts_train, series="train") +
autolayer(test, series = "f")+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12))+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12), series="test")+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12), series="one")+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12), series="forecast")+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
autoplot(cc_ts_train, series="train") +
autolayer(test)+
autolayer(ts(preds$pred, start = c(2021, 7), frequency = 12), series="forecasted")+
ggtitle("Forecasts from Intervention Model") +
xlab("Year") + ylab("Crime")
